<UserControl x:Class="WPFGameShop.GenreControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPFGameShop"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid x:Name="root" DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:GenreControl}}}">
        <Grid.Resources>
			<DataTemplate DataType="{x:Type local:GenreModel}">
                <TextBlock Text="{Binding Name}"/>

            </DataTemplate>
            <Style TargetType="{x:Type Button}" x:Key="SquareButton">
                <Setter Property="MinWidth" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
                <Setter Property="MinHeight" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
            </Style>

			<Style TargetType="{x:Type ToggleButton}" x:Key="SquareToggleButton">
				<Setter Property="MinWidth" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
				<Setter Property="MinHeight" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
			</Style>
			<BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>

        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="8*"/>
        </Grid.RowDefinitions>

		<Grid.Triggers>
			
			<EventTrigger RoutedEvent="MouseDown">
				<BeginStoryboard>
					<Storyboard>

						<DoubleAnimation 
                Storyboard.TargetName="popupContent"
                Storyboard.TargetProperty="Opacity" 
                  To="1" Duration="0:0:0.5"  />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>


		</Grid.Triggers>

		<StackPanel VerticalAlignment="Bottom" Visibility="{Binding IsEditable, Converter={StaticResource BoolToVisConverter}}" Orientation="Horizontal" Grid.Row="0">
			<Button x:Name="AddButton" Style="{StaticResource SquareButton}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Left" Content="+" Click="AddButton_Click"/>

			<Button x:Name="DeleteButton" Style="{StaticResource SquareButton}"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Left" Content="-" Click="DeleteButton_Click"/>

		</StackPanel>

		<ListBox BorderThickness="{Binding BorderThickness}" Grid.Row="1" x:Name="CurrentListBox" Drop="ListBox_Drop" AllowDrop="True" ItemsSource="{Binding CurrentGenresSource}"/>



		<Popup x:Name="popup"  
       PlacementTarget="{Binding ElementName=CurrentListBox}"   
        Placement="Right"
			   
               IsOpen="{Binding IsEditable}"
               Opened="PopupOpened"
       AllowsTransparency="True"  
       PopupAnimation="Slide"  
       >

			<Grid x:Name="popupContent">
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="8*"/>
				</Grid.RowDefinitions>
				

				<StackPanel Grid.Row="0"  Orientation="Horizontal">
					<Button x:Name="CloseButton" Style="{StaticResource SquareButton}"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Content="x">
						<Button.Triggers>
							<EventTrigger RoutedEvent="Button.Click">
								<BeginStoryboard>
									<Storyboard>
										
										<DoubleAnimation 
                Storyboard.TargetName="popupContent"
                Storyboard.TargetProperty="Opacity" 
                From="1" To="0" Duration="0:0:0.5"  />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
						</Button.Triggers>
					</Button>
				</StackPanel>

				<ListBox Grid.Row="1"   x:Name="TotalListBox"  ItemsSource="{Binding AllGenresSource}">
					<ListBox.ItemContainerStyle>
						<Style  TargetType="{x:Type ListBoxItem}">
							<EventSetter Event="PreviewMouseMove"   Handler="ListBox_PreviewMouseLeftButtonDown"/>
						</Style>
					</ListBox.ItemContainerStyle>
					
				</ListBox>


			</Grid>
            
        </Popup>
    </Grid>
</UserControl>
